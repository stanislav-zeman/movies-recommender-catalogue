name: movies

services:
  gateway:
    build:
      context: .
      args:
        - SERVICE=gateway
    restart: unless-stopped
    profiles: [ all, gateway ]
    ports:
      - "9000:8080"
    networks: [ movies ]

  content:
    build:
      context: .
      args:
        - SERVICE=content
    restart: unless-stopped
    profiles: [ all, content ]
    depends_on:
      rabbit:
        condition: service_healthy
      postgres-content:
        condition: service_healthy
    ports:
      - "9001:8080"
    networks: [ movies, content ]

  postgres-content:
    image: postgres:16
    restart: unless-stopped
    profiles: [ all, dependencies, content ]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: content
    ports:
      - "54321:5432"
    networks: [ content ]
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d content'" ]
      interval: 2s
      timeout: 3s
      retries: 10

  recommendations:
    build:
      context: .
      args:
        - SERVICE=recommendations
    restart: unless-stopped
    profiles: [ all, recommendations ]
    depends_on:
      rabbit:
        condition: service_healthy
      postgres-recommendations:
        condition: service_healthy
    ports:
      - "9003:8080"
    networks: [ movies, recommendations ]

  postgres-recommendations:
    image: postgres:16
    restart: unless-stopped
    profiles: [ all, dependencies, recommendations ]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: recommendations
    ports:
      - "54323:5432"
    networks: [ recommendations ]
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d recommendations'" ]
      interval: 2s
      timeout: 3s
      retries: 10

  reviews:
    build:
      context: .
      args:
        - SERVICE=reviews
    restart: unless-stopped
    profiles: [ all, reviews ]
    depends_on:
      rabbit:
        condition: service_healthy
      postgres-reviews:
        condition: service_healthy
    ports:
      - "9004:8080"
    networks: [ movies, reviews ]

  postgres-reviews:
    image: postgres:16
    restart: unless-stopped
    profiles: [ all, dependencies, reviews ]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: reviews
    ports:
      - "54324:5432"
    networks: [ reviews ]
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres -d reviews'" ]
      interval: 2s
      timeout: 3s
      retries: 10

  rabbit:
    image: rabbitmq:3-management
    restart: unless-stopped
    hostname: cere.dev
    profiles: [ all, dependencies, content, recommendations, reviews ]
    ports:
      - "5672:5672"   # amqp
      - "15672:15672" # http
      - "15692:15692" # http/promethus
    volumes:
      - type: bind
        source: ./config/rabbitmq/rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf
      - type: bind
        source: ./config/rabbitmq/definitions.json
        target: /etc/rabbitmq/definitions.json
    networks: [ movies ]
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 3s
      retries: 10
  
  prometheus:
    image: prom/prometheus:v2.51.2
    container_name: prometheus
    restart: unless-stopped
    profiles: [ all, content, recommendations, reviews, gateway ]
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks: [ movies ]

  grafana:
    image: grafana/grafana:10.4.2
    container_name: grafana
    restart: unless-stopped
    profiles: [ all, content, recommendations, reviews, gateway ]
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./config/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana:/var/lib/grafana
    networks: [ movies ]

networks:
  movies:
    driver: bridge
  content:
    driver: bridge
  recommendations:
    driver: bridge
  reviews:
    driver: bridge
